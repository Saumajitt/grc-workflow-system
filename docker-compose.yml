
services:
  # PostgreSQL Database
  postgres:
    image: postgres:17
    container_name: grc-postgres
    restart: always
    environment:
      POSTGRES_USER: grc_user
      POSTGRES_DB: grc_workflow
      POSTGRES_PASSWORD: grc_password
      TZ: Asia/Kolkata
    ports:
      - "5555:5432"
    volumes:
      - grc_postgres_data:/var/lib/postgresql/data

  # pgAdmin for DB management
  pgadmin:
    image: dpage/pgadmin4
    container_name: grc-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres

  # Redis Cache
  redis:
    image: redis:7
    container_name: grc-redis
    restart: always
    ports:
      - "6379:6379"

  # MinIO (Object storage)
  minio:
    image: minio/minio:latest
    container_name: grc-minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data

  # Apache Kafka + Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: grc-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: grc-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"   # for host
      - "29092:29092" # for internal Docker network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # Spring Boot Backend
  backend:
    build: .
    container_name: grc-backend
    depends_on:
      - postgres
      - redis
      - kafka
      - minio
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/grc_workflow?sslmode=disable
      SPRING_DATASOURCE_USERNAME: grc_user
      SPRING_DATASOURCE_PASSWORD: grc_password
      REDIS_HOST: redis
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "8081:8081"
    command: >
      sh -c "until pg_isready -h postgres -p 5432 -U grc_user;
             do echo waiting for postgres; sleep 2; done;
             java -jar app.jar"

  # React Frontend
  frontend:
    build: ./frontend
    container_name: grc-frontend
    depends_on:
      - backend
    ports:
      - "3001:80"
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8081

volumes:
  grc_postgres_data:
  minio_data:
