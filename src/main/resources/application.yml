spring:
  application:
    name: grc-workflow-service

  datasource:
    url: jdbc:postgresql://postgres:5432/grc_workflow?sslmode=disable&serverTimezone=Asia/Kolkata
    username: grc_user
    password: grc_password

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  redis:
    host: redis
    port: 6379
    password: ${REDIS_PASSWORD:}
    timeout: 2000ms

  kafka:
    bootstrap-servers: kafka:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: grc-workflow-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.saumajit.tprm.grc"

  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 200MB

  cache:
    type: redis
    redis:
      time-to-live: 3600000

# MinIO (top-level, not under spring)
minio:
  endpoint: http://minio:9000
  access-key: minioadmin
  secret-key: minioadmin
  bucket:
    evidence: evidence-uploads

logging:
  level:
    com.saumajit.tprm.grc: DEBUG
    org.springframework.kafka: INFO
    org.springframework.data.redis: INFO
    org.springframework.jdbc.datasource.DriverManagerDataSource: DEBUG
    com.zaxxer.hikari: DEBUG

  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
server:
  port: 8081